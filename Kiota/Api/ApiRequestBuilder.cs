// <auto-generated/>
#pragma warning disable CS0618
using Kiota.Api.Account;
using Kiota.Api.Auth;
using Kiota.Api.Contract;
using Kiota.Api.History;
using Kiota.Api.Order;
using Kiota.Api.Position;
using Kiota.Api.Status;
using Kiota.Api.Trade;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Kiota.Api
{
    /// <summary>
    /// Builds and executes requests for operations under \api
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApiRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The Account property</summary>
        public global::Kiota.Api.Account.AccountRequestBuilder Account
        {
            get => new global::Kiota.Api.Account.AccountRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Auth property</summary>
        public global::Kiota.Api.Auth.AuthRequestBuilder Auth
        {
            get => new global::Kiota.Api.Auth.AuthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Contract property</summary>
        public global::Kiota.Api.Contract.ContractRequestBuilder Contract
        {
            get => new global::Kiota.Api.Contract.ContractRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The History property</summary>
        public global::Kiota.Api.History.HistoryRequestBuilder History
        {
            get => new global::Kiota.Api.History.HistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Order property</summary>
        public global::Kiota.Api.Order.OrderRequestBuilder Order
        {
            get => new global::Kiota.Api.Order.OrderRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Position property</summary>
        public global::Kiota.Api.Position.PositionRequestBuilder Position
        {
            get => new global::Kiota.Api.Position.PositionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Status property</summary>
        public global::Kiota.Api.Status.StatusRequestBuilder Status
        {
            get => new global::Kiota.Api.Status.StatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Trade property</summary>
        public global::Kiota.Api.Trade.TradeRequestBuilder Trade
        {
            get => new global::Kiota.Api.Trade.TradeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Kiota.Api.ApiRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Kiota.Api.ApiRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
