/*
 * ProjectX Gateway API
 *
 * ProjectX Gateway API Documentation and specification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using OpenApi.Api;
using OpenApi.Model;

namespace OpenApi.Client
{
    /// <summary>
    /// Provides hosting configuration for OpenApi
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyNullableJsonConverter());
            _jsonOptions.Converters.Add(new AggregateBarModelJsonConverter());
            _jsonOptions.Converters.Add(new AggregateBarUnitJsonConverter());
            _jsonOptions.Converters.Add(new AggregateBarUnitNullableJsonConverter());
            _jsonOptions.Converters.Add(new CancelOrderErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new CancelOrderErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new CancelOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new CancelOrderResponseJsonConverter());
            _jsonOptions.Converters.Add(new CloseContractPositionRequestJsonConverter());
            _jsonOptions.Converters.Add(new ClosePositionErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new ClosePositionErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new ClosePositionResponseJsonConverter());
            _jsonOptions.Converters.Add(new ContractModelJsonConverter());
            _jsonOptions.Converters.Add(new HalfTradeModelJsonConverter());
            _jsonOptions.Converters.Add(new ListAvailableContractErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new ListAvailableContractErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new ListAvailableContractRequestJsonConverter());
            _jsonOptions.Converters.Add(new ListAvailableContractResponseJsonConverter());
            _jsonOptions.Converters.Add(new LoginApiKeyRequestJsonConverter());
            _jsonOptions.Converters.Add(new LoginAppRequestJsonConverter());
            _jsonOptions.Converters.Add(new LoginErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new LoginErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new LoginResponseJsonConverter());
            _jsonOptions.Converters.Add(new LogoutErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new LogoutErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new LogoutResponseJsonConverter());
            _jsonOptions.Converters.Add(new ModifyOrderErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new ModifyOrderErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new ModifyOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new ModifyOrderResponseJsonConverter());
            _jsonOptions.Converters.Add(new OrderModelJsonConverter());
            _jsonOptions.Converters.Add(new OrderSideJsonConverter());
            _jsonOptions.Converters.Add(new OrderSideNullableJsonConverter());
            _jsonOptions.Converters.Add(new OrderStatusJsonConverter());
            _jsonOptions.Converters.Add(new OrderStatusNullableJsonConverter());
            _jsonOptions.Converters.Add(new OrderTypeJsonConverter());
            _jsonOptions.Converters.Add(new OrderTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new PartialCloseContractPositionRequestJsonConverter());
            _jsonOptions.Converters.Add(new PartialClosePositionErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new PartialClosePositionErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new PartialClosePositionResponseJsonConverter());
            _jsonOptions.Converters.Add(new PlaceOrderBracketJsonConverter());
            _jsonOptions.Converters.Add(new PlaceOrderErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new PlaceOrderErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new PlaceOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new PlaceOrderResponseJsonConverter());
            _jsonOptions.Converters.Add(new PositionModelJsonConverter());
            _jsonOptions.Converters.Add(new PositionTypeJsonConverter());
            _jsonOptions.Converters.Add(new PositionTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new RetrieveBarErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new RetrieveBarErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new RetrieveBarRequestJsonConverter());
            _jsonOptions.Converters.Add(new RetrieveBarResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchAccountErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new SearchAccountErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new SearchAccountRequestJsonConverter());
            _jsonOptions.Converters.Add(new SearchAccountResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractByIdErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractByIdErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractByIdRequestJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractByIdResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractRequestJsonConverter());
            _jsonOptions.Converters.Add(new SearchContractResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchHalfTradeResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchOpenOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new SearchOrderErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new SearchOrderErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new SearchOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new SearchOrderResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchPositionErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new SearchPositionErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new SearchPositionRequestJsonConverter());
            _jsonOptions.Converters.Add(new SearchPositionResponseJsonConverter());
            _jsonOptions.Converters.Add(new SearchTradeErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new SearchTradeErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new SearchTradeRequestJsonConverter());
            _jsonOptions.Converters.Add(new TradingAccountModelJsonConverter());
            _jsonOptions.Converters.Add(new ValidateErrorCodeJsonConverter());
            _jsonOptions.Converters.Add(new ValidateErrorCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new ValidateResponseJsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);
            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<AccountApiEvents>();
            _services.AddSingleton<AuthApiEvents>();
            _services.AddSingleton<ContractApiEvents>();
            _services.AddSingleton<HistoryApiEvents>();
            _services.AddSingleton<OrderApiEvents>();
            _services.AddSingleton<PositionApiEvents>();
            _services.AddSingleton<StatusApiEvents>();
            _services.AddSingleton<TradeApiEvents>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddApiHttpClients
        (
            Action<HttpClient>? client = null, Action<IHttpClientBuilder>? builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IAccountApi, AccountApi>(client));
            builders.Add(_services.AddHttpClient<IAuthApi, AuthApi>(client));
            builders.Add(_services.AddHttpClient<IContractApi, ContractApi>(client));
            builders.Add(_services.AddHttpClient<IHistoryApi, HistoryApi>(client));
            builders.Add(_services.AddHttpClient<IOrderApi, OrderApi>(client));
            builders.Add(_services.AddHttpClient<IPositionApi, PositionApi>(client));
            builders.Add(_services.AddHttpClient<IStatusApi, StatusApi>(client));
            builders.Add(_services.AddHttpClient<ITradeApi, TradeApi>(client));
            
            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[]{ token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<TTokenProvider, TTokenBase>() 
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
