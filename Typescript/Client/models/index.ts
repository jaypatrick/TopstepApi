/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AggregateBarModel extends AdditionalDataHolder, Parsable {
    /**
     * The c property
     */
    c?: number | null;
    /**
     * The h property
     */
    h?: number | null;
    /**
     * The l property
     */
    l?: number | null;
    /**
     * The o property
     */
    o?: number | null;
    /**
     * The t property
     */
    t?: Date | null;
    /**
     * The v property
     */
    v?: number | null;
}
export interface CancelOrderRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The orderId property
     */
    orderId?: number | null;
}
export interface CancelOrderResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound2 = OrderNotFound3 = Rejected4 = Pending5 = UnknownError6 = AccountRejected
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface CloseContractPositionRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The contractId property
     */
    contractId?: string | null;
}
export interface ClosePositionResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound2 = PositionNotFound3 = ContractNotFound4 = ContractNotActive5 = OrderRejected6 = OrderPending7 = UnknownError8 = AccountRejected
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface ContractModel extends AdditionalDataHolder, Parsable {
    /**
     * The activeContract property
     */
    activeContract?: boolean | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The symbolId property
     */
    symbolId?: string | null;
    /**
     * The tickSize property
     */
    tickSize?: number | null;
    /**
     * The tickValue property
     */
    tickValue?: number | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AggregateBarModel}
 */
// @ts-ignore
export function createAggregateBarModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAggregateBarModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CancelOrderRequest}
 */
// @ts-ignore
export function createCancelOrderRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCancelOrderRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CancelOrderResponse}
 */
// @ts-ignore
export function createCancelOrderResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCancelOrderResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloseContractPositionRequest}
 */
// @ts-ignore
export function createCloseContractPositionRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloseContractPositionRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClosePositionResponse}
 */
// @ts-ignore
export function createClosePositionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClosePositionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContractModel}
 */
// @ts-ignore
export function createContractModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContractModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HalfTradeModel}
 */
// @ts-ignore
export function createHalfTradeModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHalfTradeModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListAvailableContractRequest}
 */
// @ts-ignore
export function createListAvailableContractRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListAvailableContractRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListAvailableContractResponse}
 */
// @ts-ignore
export function createListAvailableContractResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListAvailableContractResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginApiKeyRequest}
 */
// @ts-ignore
export function createLoginApiKeyRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginApiKeyRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginAppRequest}
 */
// @ts-ignore
export function createLoginAppRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginAppRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginResponse}
 */
// @ts-ignore
export function createLoginResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LogoutResponse}
 */
// @ts-ignore
export function createLogoutResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLogoutResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ModifyOrderRequest}
 */
// @ts-ignore
export function createModifyOrderRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoModifyOrderRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ModifyOrderResponse}
 */
// @ts-ignore
export function createModifyOrderResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoModifyOrderResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OrderModel}
 */
// @ts-ignore
export function createOrderModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOrderModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PartialCloseContractPositionRequest}
 */
// @ts-ignore
export function createPartialCloseContractPositionRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPartialCloseContractPositionRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PartialClosePositionResponse}
 */
// @ts-ignore
export function createPartialClosePositionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPartialClosePositionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlaceOrderBracket}
 */
// @ts-ignore
export function createPlaceOrderBracketFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlaceOrderBracket;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlaceOrderRequest}
 */
// @ts-ignore
export function createPlaceOrderRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlaceOrderRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlaceOrderResponse}
 */
// @ts-ignore
export function createPlaceOrderResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlaceOrderResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PositionModel}
 */
// @ts-ignore
export function createPositionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPositionModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetrieveBarRequest}
 */
// @ts-ignore
export function createRetrieveBarRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetrieveBarRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetrieveBarResponse}
 */
// @ts-ignore
export function createRetrieveBarResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetrieveBarResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchAccountRequest}
 */
// @ts-ignore
export function createSearchAccountRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchAccountRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchAccountResponse}
 */
// @ts-ignore
export function createSearchAccountResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchAccountResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchContractByIdRequest}
 */
// @ts-ignore
export function createSearchContractByIdRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchContractByIdRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchContractByIdResponse}
 */
// @ts-ignore
export function createSearchContractByIdResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchContractByIdResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchContractRequest}
 */
// @ts-ignore
export function createSearchContractRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchContractRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchContractResponse}
 */
// @ts-ignore
export function createSearchContractResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchContractResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchHalfTradeResponse}
 */
// @ts-ignore
export function createSearchHalfTradeResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchHalfTradeResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchOpenOrderRequest}
 */
// @ts-ignore
export function createSearchOpenOrderRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchOpenOrderRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchOrderRequest}
 */
// @ts-ignore
export function createSearchOrderRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchOrderRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchOrderResponse}
 */
// @ts-ignore
export function createSearchOrderResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchOrderResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchPositionRequest}
 */
// @ts-ignore
export function createSearchPositionRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchPositionRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchPositionResponse}
 */
// @ts-ignore
export function createSearchPositionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchPositionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchTradeRequest}
 */
// @ts-ignore
export function createSearchTradeRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchTradeRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TradingAccountModel}
 */
// @ts-ignore
export function createTradingAccountModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTradingAccountModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidateResponse}
 */
// @ts-ignore
export function createValidateResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoValidateResponse;
}
/**
 * The deserialization information for the current model
 * @param AggregateBarModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAggregateBarModel(aggregateBarModel: Partial<AggregateBarModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "c": n => { aggregateBarModel.c = n.getNumberValue(); },
        "h": n => { aggregateBarModel.h = n.getNumberValue(); },
        "l": n => { aggregateBarModel.l = n.getNumberValue(); },
        "o": n => { aggregateBarModel.o = n.getNumberValue(); },
        "t": n => { aggregateBarModel.t = n.getDateValue(); },
        "v": n => { aggregateBarModel.v = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CancelOrderRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCancelOrderRequest(cancelOrderRequest: Partial<CancelOrderRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { cancelOrderRequest.accountId = n.getNumberValue(); },
        "orderId": n => { cancelOrderRequest.orderId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CancelOrderResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCancelOrderResponse(cancelOrderResponse: Partial<CancelOrderResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { cancelOrderResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { cancelOrderResponse.errorMessage = n.getStringValue(); },
        "success": n => { cancelOrderResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CloseContractPositionRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloseContractPositionRequest(closeContractPositionRequest: Partial<CloseContractPositionRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { closeContractPositionRequest.accountId = n.getNumberValue(); },
        "contractId": n => { closeContractPositionRequest.contractId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ClosePositionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClosePositionResponse(closePositionResponse: Partial<ClosePositionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { closePositionResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { closePositionResponse.errorMessage = n.getStringValue(); },
        "success": n => { closePositionResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ContractModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContractModel(contractModel: Partial<ContractModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "activeContract": n => { contractModel.activeContract = n.getBooleanValue(); },
        "description": n => { contractModel.description = n.getStringValue(); },
        "id": n => { contractModel.id = n.getStringValue(); },
        "name": n => { contractModel.name = n.getStringValue(); },
        "symbolId": n => { contractModel.symbolId = n.getStringValue(); },
        "tickSize": n => { contractModel.tickSize = n.getNumberValue(); },
        "tickValue": n => { contractModel.tickValue = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HalfTradeModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHalfTradeModel(halfTradeModel: Partial<HalfTradeModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { halfTradeModel.accountId = n.getNumberValue(); },
        "contractId": n => { halfTradeModel.contractId = n.getStringValue(); },
        "creationTimestamp": n => { halfTradeModel.creationTimestamp = n.getDateValue(); },
        "fees": n => { halfTradeModel.fees = n.getNumberValue(); },
        "id": n => { halfTradeModel.id = n.getNumberValue(); },
        "orderId": n => { halfTradeModel.orderId = n.getNumberValue(); },
        "price": n => { halfTradeModel.price = n.getNumberValue(); },
        "profitAndLoss": n => { halfTradeModel.profitAndLoss = n.getNumberValue(); },
        "side": n => { halfTradeModel.side = n.getNumberValue(); },
        "size": n => { halfTradeModel.size = n.getNumberValue(); },
        "voided": n => { halfTradeModel.voided = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ListAvailableContractRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListAvailableContractRequest(listAvailableContractRequest: Partial<ListAvailableContractRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "live": n => { listAvailableContractRequest.live = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ListAvailableContractResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListAvailableContractResponse(listAvailableContractResponse: Partial<ListAvailableContractResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contracts": n => { listAvailableContractResponse.contracts = n.getCollectionOfObjectValues<ContractModel>(createContractModelFromDiscriminatorValue); },
        "errorCode": n => { listAvailableContractResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { listAvailableContractResponse.errorMessage = n.getStringValue(); },
        "success": n => { listAvailableContractResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param LoginApiKeyRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginApiKeyRequest(loginApiKeyRequest: Partial<LoginApiKeyRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "apiKey": n => { loginApiKeyRequest.apiKey = n.getStringValue(); },
        "userName": n => { loginApiKeyRequest.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param LoginAppRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginAppRequest(loginAppRequest: Partial<LoginAppRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "appId": n => { loginAppRequest.appId = n.getStringValue(); },
        "deviceId": n => { loginAppRequest.deviceId = n.getStringValue(); },
        "password": n => { loginAppRequest.password = n.getStringValue(); },
        "userName": n => { loginAppRequest.userName = n.getStringValue(); },
        "verifyKey": n => { loginAppRequest.verifyKey = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param LoginResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginResponse(loginResponse: Partial<LoginResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { loginResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { loginResponse.errorMessage = n.getStringValue(); },
        "success": n => { loginResponse.success = n.getBooleanValue(); },
        "token": n => { loginResponse.token = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param LogoutResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLogoutResponse(logoutResponse: Partial<LogoutResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { logoutResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { logoutResponse.errorMessage = n.getStringValue(); },
        "success": n => { logoutResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ModifyOrderRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoModifyOrderRequest(modifyOrderRequest: Partial<ModifyOrderRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { modifyOrderRequest.accountId = n.getNumberValue(); },
        "limitPrice": n => { modifyOrderRequest.limitPrice = n.getNumberValue(); },
        "orderId": n => { modifyOrderRequest.orderId = n.getNumberValue(); },
        "size": n => { modifyOrderRequest.size = n.getNumberValue(); },
        "stopPrice": n => { modifyOrderRequest.stopPrice = n.getNumberValue(); },
        "trailPrice": n => { modifyOrderRequest.trailPrice = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ModifyOrderResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoModifyOrderResponse(modifyOrderResponse: Partial<ModifyOrderResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { modifyOrderResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { modifyOrderResponse.errorMessage = n.getStringValue(); },
        "success": n => { modifyOrderResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param OrderModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOrderModel(orderModel: Partial<OrderModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { orderModel.accountId = n.getNumberValue(); },
        "contractId": n => { orderModel.contractId = n.getStringValue(); },
        "creationTimestamp": n => { orderModel.creationTimestamp = n.getDateValue(); },
        "customTag": n => { orderModel.customTag = n.getStringValue(); },
        "filledPrice": n => { orderModel.filledPrice = n.getNumberValue(); },
        "fillVolume": n => { orderModel.fillVolume = n.getNumberValue(); },
        "id": n => { orderModel.id = n.getNumberValue(); },
        "limitPrice": n => { orderModel.limitPrice = n.getNumberValue(); },
        "side": n => { orderModel.side = n.getNumberValue(); },
        "size": n => { orderModel.size = n.getNumberValue(); },
        "status": n => { orderModel.status = n.getNumberValue(); },
        "stopPrice": n => { orderModel.stopPrice = n.getNumberValue(); },
        "symbolId": n => { orderModel.symbolId = n.getStringValue(); },
        "type": n => { orderModel.type = n.getNumberValue(); },
        "updateTimestamp": n => { orderModel.updateTimestamp = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PartialCloseContractPositionRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPartialCloseContractPositionRequest(partialCloseContractPositionRequest: Partial<PartialCloseContractPositionRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { partialCloseContractPositionRequest.accountId = n.getNumberValue(); },
        "contractId": n => { partialCloseContractPositionRequest.contractId = n.getStringValue(); },
        "size": n => { partialCloseContractPositionRequest.size = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PartialClosePositionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPartialClosePositionResponse(partialClosePositionResponse: Partial<PartialClosePositionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { partialClosePositionResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { partialClosePositionResponse.errorMessage = n.getStringValue(); },
        "success": n => { partialClosePositionResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PlaceOrderBracket The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlaceOrderBracket(placeOrderBracket: Partial<PlaceOrderBracket> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "ticks": n => { placeOrderBracket.ticks = n.getNumberValue(); },
        "type": n => { placeOrderBracket.type = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PlaceOrderRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlaceOrderRequest(placeOrderRequest: Partial<PlaceOrderRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { placeOrderRequest.accountId = n.getNumberValue(); },
        "contractId": n => { placeOrderRequest.contractId = n.getStringValue(); },
        "customTag": n => { placeOrderRequest.customTag = n.getStringValue(); },
        "limitPrice": n => { placeOrderRequest.limitPrice = n.getNumberValue(); },
        "side": n => { placeOrderRequest.side = n.getNumberValue(); },
        "size": n => { placeOrderRequest.size = n.getNumberValue(); },
        "stopLossBracket": n => { placeOrderRequest.stopLossBracket = n.getObjectValue<PlaceOrderBracket>(createPlaceOrderBracketFromDiscriminatorValue); },
        "stopPrice": n => { placeOrderRequest.stopPrice = n.getNumberValue(); },
        "takeProfitBracket": n => { placeOrderRequest.takeProfitBracket = n.getObjectValue<PlaceOrderBracket>(createPlaceOrderBracketFromDiscriminatorValue); },
        "trailPrice": n => { placeOrderRequest.trailPrice = n.getNumberValue(); },
        "type": n => { placeOrderRequest.type = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PlaceOrderResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlaceOrderResponse(placeOrderResponse: Partial<PlaceOrderResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { placeOrderResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { placeOrderResponse.errorMessage = n.getStringValue(); },
        "orderId": n => { placeOrderResponse.orderId = n.getNumberValue(); },
        "success": n => { placeOrderResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PositionModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPositionModel(positionModel: Partial<PositionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { positionModel.accountId = n.getNumberValue(); },
        "averagePrice": n => { positionModel.averagePrice = n.getNumberValue(); },
        "contractId": n => { positionModel.contractId = n.getStringValue(); },
        "creationTimestamp": n => { positionModel.creationTimestamp = n.getDateValue(); },
        "id": n => { positionModel.id = n.getNumberValue(); },
        "size": n => { positionModel.size = n.getNumberValue(); },
        "type": n => { positionModel.type = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetrieveBarRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetrieveBarRequest(retrieveBarRequest: Partial<RetrieveBarRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contractId": n => { retrieveBarRequest.contractId = n.getStringValue(); },
        "endTime": n => { retrieveBarRequest.endTime = n.getDateValue(); },
        "includePartialBar": n => { retrieveBarRequest.includePartialBar = n.getBooleanValue(); },
        "limit": n => { retrieveBarRequest.limit = n.getNumberValue(); },
        "live": n => { retrieveBarRequest.live = n.getBooleanValue(); },
        "startTime": n => { retrieveBarRequest.startTime = n.getDateValue(); },
        "unit": n => { retrieveBarRequest.unit = n.getNumberValue(); },
        "unitNumber": n => { retrieveBarRequest.unitNumber = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetrieveBarResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetrieveBarResponse(retrieveBarResponse: Partial<RetrieveBarResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bars": n => { retrieveBarResponse.bars = n.getCollectionOfObjectValues<AggregateBarModel>(createAggregateBarModelFromDiscriminatorValue); },
        "errorCode": n => { retrieveBarResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { retrieveBarResponse.errorMessage = n.getStringValue(); },
        "success": n => { retrieveBarResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchAccountRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchAccountRequest(searchAccountRequest: Partial<SearchAccountRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "onlyActiveAccounts": n => { searchAccountRequest.onlyActiveAccounts = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchAccountResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchAccountResponse(searchAccountResponse: Partial<SearchAccountResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accounts": n => { searchAccountResponse.accounts = n.getCollectionOfObjectValues<TradingAccountModel>(createTradingAccountModelFromDiscriminatorValue); },
        "errorCode": n => { searchAccountResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { searchAccountResponse.errorMessage = n.getStringValue(); },
        "success": n => { searchAccountResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchContractByIdRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchContractByIdRequest(searchContractByIdRequest: Partial<SearchContractByIdRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contractId": n => { searchContractByIdRequest.contractId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchContractByIdResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchContractByIdResponse(searchContractByIdResponse: Partial<SearchContractByIdResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contract": n => { searchContractByIdResponse.contract = n.getObjectValue<ContractModel>(createContractModelFromDiscriminatorValue); },
        "errorCode": n => { searchContractByIdResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { searchContractByIdResponse.errorMessage = n.getStringValue(); },
        "success": n => { searchContractByIdResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchContractRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchContractRequest(searchContractRequest: Partial<SearchContractRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "live": n => { searchContractRequest.live = n.getBooleanValue(); },
        "searchText": n => { searchContractRequest.searchText = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchContractResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchContractResponse(searchContractResponse: Partial<SearchContractResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contracts": n => { searchContractResponse.contracts = n.getCollectionOfObjectValues<ContractModel>(createContractModelFromDiscriminatorValue); },
        "errorCode": n => { searchContractResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { searchContractResponse.errorMessage = n.getStringValue(); },
        "success": n => { searchContractResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchHalfTradeResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchHalfTradeResponse(searchHalfTradeResponse: Partial<SearchHalfTradeResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { searchHalfTradeResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { searchHalfTradeResponse.errorMessage = n.getStringValue(); },
        "success": n => { searchHalfTradeResponse.success = n.getBooleanValue(); },
        "trades": n => { searchHalfTradeResponse.trades = n.getCollectionOfObjectValues<HalfTradeModel>(createHalfTradeModelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchOpenOrderRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchOpenOrderRequest(searchOpenOrderRequest: Partial<SearchOpenOrderRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { searchOpenOrderRequest.accountId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchOrderRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchOrderRequest(searchOrderRequest: Partial<SearchOrderRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { searchOrderRequest.accountId = n.getNumberValue(); },
        "endTimestamp": n => { searchOrderRequest.endTimestamp = n.getDateValue(); },
        "startTimestamp": n => { searchOrderRequest.startTimestamp = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchOrderResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchOrderResponse(searchOrderResponse: Partial<SearchOrderResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { searchOrderResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { searchOrderResponse.errorMessage = n.getStringValue(); },
        "orders": n => { searchOrderResponse.orders = n.getCollectionOfObjectValues<OrderModel>(createOrderModelFromDiscriminatorValue); },
        "success": n => { searchOrderResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchPositionRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchPositionRequest(searchPositionRequest: Partial<SearchPositionRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { searchPositionRequest.accountId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchPositionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchPositionResponse(searchPositionResponse: Partial<SearchPositionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { searchPositionResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { searchPositionResponse.errorMessage = n.getStringValue(); },
        "positions": n => { searchPositionResponse.positions = n.getCollectionOfObjectValues<PositionModel>(createPositionModelFromDiscriminatorValue); },
        "success": n => { searchPositionResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchTradeRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchTradeRequest(searchTradeRequest: Partial<SearchTradeRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { searchTradeRequest.accountId = n.getNumberValue(); },
        "endTimestamp": n => { searchTradeRequest.endTimestamp = n.getDateValue(); },
        "startTimestamp": n => { searchTradeRequest.startTimestamp = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TradingAccountModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTradingAccountModel(tradingAccountModel: Partial<TradingAccountModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "balance": n => { tradingAccountModel.balance = n.getNumberValue(); },
        "canTrade": n => { tradingAccountModel.canTrade = n.getBooleanValue(); },
        "id": n => { tradingAccountModel.id = n.getNumberValue(); },
        "isVisible": n => { tradingAccountModel.isVisible = n.getBooleanValue(); },
        "name": n => { tradingAccountModel.name = n.getStringValue(); },
        "simulated": n => { tradingAccountModel.simulated = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ValidateResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoValidateResponse(validateResponse: Partial<ValidateResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errorCode": n => { validateResponse.errorCode = n.getNumberValue(); },
        "errorMessage": n => { validateResponse.errorMessage = n.getStringValue(); },
        "newToken": n => { validateResponse.newToken = n.getStringValue(); },
        "success": n => { validateResponse.success = n.getBooleanValue(); },
    }
}
export interface HalfTradeModel extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The contractId property
     */
    contractId?: string | null;
    /**
     * The creationTimestamp property
     */
    creationTimestamp?: Date | null;
    /**
     * The fees property
     */
    fees?: number | null;
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The orderId property
     */
    orderId?: number | null;
    /**
     * The price property
     */
    price?: number | null;
    /**
     * The profitAndLoss property
     */
    profitAndLoss?: number | null;
    /**
     * 0 = Bid1 = Ask
     */
    side?: number | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * The voided property
     */
    voided?: boolean | null;
}
export interface ListAvailableContractRequest extends AdditionalDataHolder, Parsable {
    /**
     * The live property
     */
    live?: boolean | null;
}
export interface ListAvailableContractResponse extends AdditionalDataHolder, Parsable {
    /**
     * The contracts property
     */
    contracts?: ContractModel[] | null;
    /**
     * 0 = Success
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface LoginApiKeyRequest extends AdditionalDataHolder, Parsable {
    /**
     * The apiKey property
     */
    apiKey?: string | null;
    /**
     * The userName property
     */
    userName?: string | null;
}
export interface LoginAppRequest extends AdditionalDataHolder, Parsable {
    /**
     * The appId property
     */
    appId?: string | null;
    /**
     * The deviceId property
     */
    deviceId?: string | null;
    /**
     * The password property
     */
    password?: string | null;
    /**
     * The userName property
     */
    userName?: string | null;
    /**
     * The verifyKey property
     */
    verifyKey?: string | null;
}
export interface LoginResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = UserNotFound2 = PasswordVerificationFailed3 = InvalidCredentials4 = AppNotFound5 = AppVerificationFailed6 = InvalidDevice7 = AgreementsNotSigned8 = UnknownError9 = ApiSubscriptionNotFound10 = ApiKeyAuthenticationDisabled
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
    /**
     * The token property
     */
    token?: string | null;
}
export interface LogoutResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = InvalidSession2 = UnknownError
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface ModifyOrderRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The limitPrice property
     */
    limitPrice?: number | null;
    /**
     * The orderId property
     */
    orderId?: number | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * The stopPrice property
     */
    stopPrice?: number | null;
    /**
     * The trailPrice property
     */
    trailPrice?: number | null;
}
export interface ModifyOrderResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound2 = OrderNotFound3 = Rejected4 = Pending5 = UnknownError6 = AccountRejected7 = ContractNotFound
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface OrderModel extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The contractId property
     */
    contractId?: string | null;
    /**
     * The creationTimestamp property
     */
    creationTimestamp?: Date | null;
    /**
     * The customTag property
     */
    customTag?: string | null;
    /**
     * The filledPrice property
     */
    filledPrice?: number | null;
    /**
     * The fillVolume property
     */
    fillVolume?: number | null;
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The limitPrice property
     */
    limitPrice?: number | null;
    /**
     * 0 = Bid1 = Ask
     */
    side?: number | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * 0 = None1 = Open2 = Filled3 = Cancelled4 = Expired5 = Rejected6 = Pending7 = PendingCancellation8 = Suspended
     */
    status?: number | null;
    /**
     * The stopPrice property
     */
    stopPrice?: number | null;
    /**
     * The symbolId property
     */
    symbolId?: string | null;
    /**
     * 0 = Unknown1 = Limit2 = Market3 = StopLimit4 = Stop5 = TrailingStop6 = JoinBid7 = JoinAsk
     */
    type?: number | null;
    /**
     * The updateTimestamp property
     */
    updateTimestamp?: Date | null;
}
export interface PartialCloseContractPositionRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The contractId property
     */
    contractId?: string | null;
    /**
     * The size property
     */
    size?: number | null;
}
export interface PartialClosePositionResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound2 = PositionNotFound3 = ContractNotFound4 = ContractNotActive5 = InvalidCloseSize6 = OrderRejected7 = OrderPending8 = UnknownError9 = AccountRejected
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface PlaceOrderBracket extends AdditionalDataHolder, Parsable {
    /**
     * The ticks property
     */
    ticks?: number | null;
    /**
     * 0 = Unknown1 = Limit2 = Market3 = StopLimit4 = Stop5 = TrailingStop6 = JoinBid7 = JoinAsk
     */
    type?: number | null;
}
export interface PlaceOrderRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The contractId property
     */
    contractId?: string | null;
    /**
     * The customTag property
     */
    customTag?: string | null;
    /**
     * The limitPrice property
     */
    limitPrice?: number | null;
    /**
     * 0 = Bid1 = Ask
     */
    side?: number | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * The stopLossBracket property
     */
    stopLossBracket?: PlaceOrderBracket | null;
    /**
     * The stopPrice property
     */
    stopPrice?: number | null;
    /**
     * The takeProfitBracket property
     */
    takeProfitBracket?: PlaceOrderBracket | null;
    /**
     * The trailPrice property
     */
    trailPrice?: number | null;
    /**
     * 0 = Unknown1 = Limit2 = Market3 = StopLimit4 = Stop5 = TrailingStop6 = JoinBid7 = JoinAsk
     */
    type?: number | null;
}
export interface PlaceOrderResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound2 = OrderRejected3 = InsufficientFunds4 = AccountViolation5 = OutsideTradingHours6 = OrderPending7 = UnknownError8 = ContractNotFound9 = ContractNotActive10 = AccountRejected
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The orderId property
     */
    orderId?: number | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface PositionModel extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The averagePrice property
     */
    averagePrice?: number | null;
    /**
     * The contractId property
     */
    contractId?: string | null;
    /**
     * The creationTimestamp property
     */
    creationTimestamp?: Date | null;
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * 0 = Undefined1 = Long2 = Short
     */
    type?: number | null;
}
export interface RetrieveBarRequest extends AdditionalDataHolder, Parsable {
    /**
     * The contractId property
     */
    contractId?: string | null;
    /**
     * The endTime property
     */
    endTime?: Date | null;
    /**
     * The includePartialBar property
     */
    includePartialBar?: boolean | null;
    /**
     * The limit property
     */
    limit?: number | null;
    /**
     * The live property
     */
    live?: boolean | null;
    /**
     * The startTime property
     */
    startTime?: Date | null;
    /**
     * 0 = Unspecified1 = Second2 = Minute3 = Hour4 = Day5 = Week6 = Month
     */
    unit?: number | null;
    /**
     * The unitNumber property
     */
    unitNumber?: number | null;
}
export interface RetrieveBarResponse extends AdditionalDataHolder, Parsable {
    /**
     * The bars property
     */
    bars?: AggregateBarModel[] | null;
    /**
     * 0 = Success1 = ContractNotFound2 = UnitInvalid3 = UnitNumberInvalid4 = LimitInvalid
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface SearchAccountRequest extends AdditionalDataHolder, Parsable {
    /**
     * The onlyActiveAccounts property
     */
    onlyActiveAccounts?: boolean | null;
}
export interface SearchAccountResponse extends AdditionalDataHolder, Parsable {
    /**
     * The accounts property
     */
    accounts?: TradingAccountModel[] | null;
    /**
     * 0 = Success
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface SearchContractByIdRequest extends AdditionalDataHolder, Parsable {
    /**
     * The contractId property
     */
    contractId?: string | null;
}
export interface SearchContractByIdResponse extends AdditionalDataHolder, Parsable {
    /**
     * The contract property
     */
    contract?: ContractModel | null;
    /**
     * 0 = Success1 = ContractNotFound
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface SearchContractRequest extends AdditionalDataHolder, Parsable {
    /**
     * The live property
     */
    live?: boolean | null;
    /**
     * The searchText property
     */
    searchText?: string | null;
}
export interface SearchContractResponse extends AdditionalDataHolder, Parsable {
    /**
     * The contracts property
     */
    contracts?: ContractModel[] | null;
    /**
     * 0 = Success
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface SearchHalfTradeResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
    /**
     * The trades property
     */
    trades?: HalfTradeModel[] | null;
}
export interface SearchOpenOrderRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
}
export interface SearchOrderRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The endTimestamp property
     */
    endTimestamp?: Date | null;
    /**
     * The startTimestamp property
     */
    startTimestamp?: Date | null;
}
export interface SearchOrderResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The orders property
     */
    orders?: OrderModel[] | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface SearchPositionRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
}
export interface SearchPositionResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = AccountNotFound
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The positions property
     */
    positions?: PositionModel[] | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface SearchTradeRequest extends AdditionalDataHolder, Parsable {
    /**
     * The accountId property
     */
    accountId?: number | null;
    /**
     * The endTimestamp property
     */
    endTimestamp?: Date | null;
    /**
     * The startTimestamp property
     */
    startTimestamp?: Date | null;
}
/**
 * Serializes information the current object
 * @param AggregateBarModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAggregateBarModel(writer: SerializationWriter, aggregateBarModel: Partial<AggregateBarModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aggregateBarModel || isSerializingDerivedType) { return; }
    writer.writeNumberValue("c", aggregateBarModel.c);
    writer.writeNumberValue("h", aggregateBarModel.h);
    writer.writeNumberValue("l", aggregateBarModel.l);
    writer.writeNumberValue("o", aggregateBarModel.o);
    writer.writeDateValue("t", aggregateBarModel.t);
    writer.writeNumberValue("v", aggregateBarModel.v);
    writer.writeAdditionalData(aggregateBarModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CancelOrderRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCancelOrderRequest(writer: SerializationWriter, cancelOrderRequest: Partial<CancelOrderRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cancelOrderRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", cancelOrderRequest.accountId);
    writer.writeNumberValue("orderId", cancelOrderRequest.orderId);
    writer.writeAdditionalData(cancelOrderRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param CancelOrderResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCancelOrderResponse(writer: SerializationWriter, cancelOrderResponse: Partial<CancelOrderResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cancelOrderResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", cancelOrderResponse.errorCode);
    writer.writeStringValue("errorMessage", cancelOrderResponse.errorMessage);
    writer.writeBooleanValue("success", cancelOrderResponse.success);
    writer.writeAdditionalData(cancelOrderResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param CloseContractPositionRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloseContractPositionRequest(writer: SerializationWriter, closeContractPositionRequest: Partial<CloseContractPositionRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!closeContractPositionRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", closeContractPositionRequest.accountId);
    writer.writeStringValue("contractId", closeContractPositionRequest.contractId);
    writer.writeAdditionalData(closeContractPositionRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param ClosePositionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClosePositionResponse(writer: SerializationWriter, closePositionResponse: Partial<ClosePositionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!closePositionResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", closePositionResponse.errorCode);
    writer.writeStringValue("errorMessage", closePositionResponse.errorMessage);
    writer.writeBooleanValue("success", closePositionResponse.success);
    writer.writeAdditionalData(closePositionResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param ContractModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContractModel(writer: SerializationWriter, contractModel: Partial<ContractModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!contractModel || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("activeContract", contractModel.activeContract);
    writer.writeStringValue("description", contractModel.description);
    writer.writeStringValue("id", contractModel.id);
    writer.writeStringValue("name", contractModel.name);
    writer.writeStringValue("symbolId", contractModel.symbolId);
    writer.writeNumberValue("tickSize", contractModel.tickSize);
    writer.writeNumberValue("tickValue", contractModel.tickValue);
    writer.writeAdditionalData(contractModel.additionalData);
}
/**
 * Serializes information the current object
 * @param HalfTradeModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHalfTradeModel(writer: SerializationWriter, halfTradeModel: Partial<HalfTradeModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!halfTradeModel || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", halfTradeModel.accountId);
    writer.writeStringValue("contractId", halfTradeModel.contractId);
    writer.writeDateValue("creationTimestamp", halfTradeModel.creationTimestamp);
    writer.writeNumberValue("fees", halfTradeModel.fees);
    writer.writeNumberValue("id", halfTradeModel.id);
    writer.writeNumberValue("orderId", halfTradeModel.orderId);
    writer.writeNumberValue("price", halfTradeModel.price);
    writer.writeNumberValue("profitAndLoss", halfTradeModel.profitAndLoss);
    writer.writeNumberValue("side", halfTradeModel.side);
    writer.writeNumberValue("size", halfTradeModel.size);
    writer.writeBooleanValue("voided", halfTradeModel.voided);
    writer.writeAdditionalData(halfTradeModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ListAvailableContractRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListAvailableContractRequest(writer: SerializationWriter, listAvailableContractRequest: Partial<ListAvailableContractRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!listAvailableContractRequest || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("live", listAvailableContractRequest.live);
    writer.writeAdditionalData(listAvailableContractRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ListAvailableContractResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListAvailableContractResponse(writer: SerializationWriter, listAvailableContractResponse: Partial<ListAvailableContractResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!listAvailableContractResponse || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<ContractModel>("contracts", listAvailableContractResponse.contracts, serializeContractModel);
    writer.writeNumberValue("errorCode", listAvailableContractResponse.errorCode);
    writer.writeStringValue("errorMessage", listAvailableContractResponse.errorMessage);
    writer.writeBooleanValue("success", listAvailableContractResponse.success);
    writer.writeAdditionalData(listAvailableContractResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LoginApiKeyRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginApiKeyRequest(writer: SerializationWriter, loginApiKeyRequest: Partial<LoginApiKeyRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!loginApiKeyRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("apiKey", loginApiKeyRequest.apiKey);
    writer.writeStringValue("userName", loginApiKeyRequest.userName);
    writer.writeAdditionalData(loginApiKeyRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LoginAppRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginAppRequest(writer: SerializationWriter, loginAppRequest: Partial<LoginAppRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!loginAppRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("appId", loginAppRequest.appId);
    writer.writeStringValue("deviceId", loginAppRequest.deviceId);
    writer.writeStringValue("password", loginAppRequest.password);
    writer.writeStringValue("userName", loginAppRequest.userName);
    writer.writeStringValue("verifyKey", loginAppRequest.verifyKey);
    writer.writeAdditionalData(loginAppRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LoginResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginResponse(writer: SerializationWriter, loginResponse: Partial<LoginResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!loginResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", loginResponse.errorCode);
    writer.writeStringValue("errorMessage", loginResponse.errorMessage);
    writer.writeBooleanValue("success", loginResponse.success);
    writer.writeStringValue("token", loginResponse.token);
    writer.writeAdditionalData(loginResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LogoutResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLogoutResponse(writer: SerializationWriter, logoutResponse: Partial<LogoutResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!logoutResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", logoutResponse.errorCode);
    writer.writeStringValue("errorMessage", logoutResponse.errorMessage);
    writer.writeBooleanValue("success", logoutResponse.success);
    writer.writeAdditionalData(logoutResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ModifyOrderRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeModifyOrderRequest(writer: SerializationWriter, modifyOrderRequest: Partial<ModifyOrderRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!modifyOrderRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", modifyOrderRequest.accountId);
    writer.writeNumberValue("limitPrice", modifyOrderRequest.limitPrice);
    writer.writeNumberValue("orderId", modifyOrderRequest.orderId);
    writer.writeNumberValue("size", modifyOrderRequest.size);
    writer.writeNumberValue("stopPrice", modifyOrderRequest.stopPrice);
    writer.writeNumberValue("trailPrice", modifyOrderRequest.trailPrice);
    writer.writeAdditionalData(modifyOrderRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ModifyOrderResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeModifyOrderResponse(writer: SerializationWriter, modifyOrderResponse: Partial<ModifyOrderResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!modifyOrderResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", modifyOrderResponse.errorCode);
    writer.writeStringValue("errorMessage", modifyOrderResponse.errorMessage);
    writer.writeBooleanValue("success", modifyOrderResponse.success);
    writer.writeAdditionalData(modifyOrderResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OrderModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOrderModel(writer: SerializationWriter, orderModel: Partial<OrderModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!orderModel || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", orderModel.accountId);
    writer.writeStringValue("contractId", orderModel.contractId);
    writer.writeDateValue("creationTimestamp", orderModel.creationTimestamp);
    writer.writeStringValue("customTag", orderModel.customTag);
    writer.writeNumberValue("filledPrice", orderModel.filledPrice);
    writer.writeNumberValue("fillVolume", orderModel.fillVolume);
    writer.writeNumberValue("id", orderModel.id);
    writer.writeNumberValue("limitPrice", orderModel.limitPrice);
    writer.writeNumberValue("side", orderModel.side);
    writer.writeNumberValue("size", orderModel.size);
    writer.writeNumberValue("status", orderModel.status);
    writer.writeNumberValue("stopPrice", orderModel.stopPrice);
    writer.writeStringValue("symbolId", orderModel.symbolId);
    writer.writeNumberValue("type", orderModel.type);
    writer.writeDateValue("updateTimestamp", orderModel.updateTimestamp);
    writer.writeAdditionalData(orderModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PartialCloseContractPositionRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePartialCloseContractPositionRequest(writer: SerializationWriter, partialCloseContractPositionRequest: Partial<PartialCloseContractPositionRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!partialCloseContractPositionRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", partialCloseContractPositionRequest.accountId);
    writer.writeStringValue("contractId", partialCloseContractPositionRequest.contractId);
    writer.writeNumberValue("size", partialCloseContractPositionRequest.size);
    writer.writeAdditionalData(partialCloseContractPositionRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PartialClosePositionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePartialClosePositionResponse(writer: SerializationWriter, partialClosePositionResponse: Partial<PartialClosePositionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!partialClosePositionResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", partialClosePositionResponse.errorCode);
    writer.writeStringValue("errorMessage", partialClosePositionResponse.errorMessage);
    writer.writeBooleanValue("success", partialClosePositionResponse.success);
    writer.writeAdditionalData(partialClosePositionResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlaceOrderBracket The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlaceOrderBracket(writer: SerializationWriter, placeOrderBracket: Partial<PlaceOrderBracket> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!placeOrderBracket || isSerializingDerivedType) { return; }
    writer.writeNumberValue("ticks", placeOrderBracket.ticks);
    writer.writeNumberValue("type", placeOrderBracket.type);
    writer.writeAdditionalData(placeOrderBracket.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlaceOrderRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlaceOrderRequest(writer: SerializationWriter, placeOrderRequest: Partial<PlaceOrderRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!placeOrderRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", placeOrderRequest.accountId);
    writer.writeStringValue("contractId", placeOrderRequest.contractId);
    writer.writeStringValue("customTag", placeOrderRequest.customTag);
    writer.writeNumberValue("limitPrice", placeOrderRequest.limitPrice);
    writer.writeNumberValue("side", placeOrderRequest.side);
    writer.writeNumberValue("size", placeOrderRequest.size);
    writer.writeObjectValue<PlaceOrderBracket>("stopLossBracket", placeOrderRequest.stopLossBracket, serializePlaceOrderBracket);
    writer.writeNumberValue("stopPrice", placeOrderRequest.stopPrice);
    writer.writeObjectValue<PlaceOrderBracket>("takeProfitBracket", placeOrderRequest.takeProfitBracket, serializePlaceOrderBracket);
    writer.writeNumberValue("trailPrice", placeOrderRequest.trailPrice);
    writer.writeNumberValue("type", placeOrderRequest.type);
    writer.writeAdditionalData(placeOrderRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlaceOrderResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlaceOrderResponse(writer: SerializationWriter, placeOrderResponse: Partial<PlaceOrderResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!placeOrderResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", placeOrderResponse.errorCode);
    writer.writeStringValue("errorMessage", placeOrderResponse.errorMessage);
    writer.writeNumberValue("orderId", placeOrderResponse.orderId);
    writer.writeBooleanValue("success", placeOrderResponse.success);
    writer.writeAdditionalData(placeOrderResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PositionModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePositionModel(writer: SerializationWriter, positionModel: Partial<PositionModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!positionModel || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", positionModel.accountId);
    writer.writeNumberValue("averagePrice", positionModel.averagePrice);
    writer.writeStringValue("contractId", positionModel.contractId);
    writer.writeDateValue("creationTimestamp", positionModel.creationTimestamp);
    writer.writeNumberValue("id", positionModel.id);
    writer.writeNumberValue("size", positionModel.size);
    writer.writeNumberValue("type", positionModel.type);
    writer.writeAdditionalData(positionModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetrieveBarRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetrieveBarRequest(writer: SerializationWriter, retrieveBarRequest: Partial<RetrieveBarRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retrieveBarRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("contractId", retrieveBarRequest.contractId);
    writer.writeDateValue("endTime", retrieveBarRequest.endTime);
    writer.writeBooleanValue("includePartialBar", retrieveBarRequest.includePartialBar);
    writer.writeNumberValue("limit", retrieveBarRequest.limit);
    writer.writeBooleanValue("live", retrieveBarRequest.live);
    writer.writeDateValue("startTime", retrieveBarRequest.startTime);
    writer.writeNumberValue("unit", retrieveBarRequest.unit);
    writer.writeNumberValue("unitNumber", retrieveBarRequest.unitNumber);
    writer.writeAdditionalData(retrieveBarRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetrieveBarResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetrieveBarResponse(writer: SerializationWriter, retrieveBarResponse: Partial<RetrieveBarResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retrieveBarResponse || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<AggregateBarModel>("bars", retrieveBarResponse.bars, serializeAggregateBarModel);
    writer.writeNumberValue("errorCode", retrieveBarResponse.errorCode);
    writer.writeStringValue("errorMessage", retrieveBarResponse.errorMessage);
    writer.writeBooleanValue("success", retrieveBarResponse.success);
    writer.writeAdditionalData(retrieveBarResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchAccountRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchAccountRequest(writer: SerializationWriter, searchAccountRequest: Partial<SearchAccountRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchAccountRequest || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("onlyActiveAccounts", searchAccountRequest.onlyActiveAccounts);
    writer.writeAdditionalData(searchAccountRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchAccountResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchAccountResponse(writer: SerializationWriter, searchAccountResponse: Partial<SearchAccountResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchAccountResponse || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<TradingAccountModel>("accounts", searchAccountResponse.accounts, serializeTradingAccountModel);
    writer.writeNumberValue("errorCode", searchAccountResponse.errorCode);
    writer.writeStringValue("errorMessage", searchAccountResponse.errorMessage);
    writer.writeBooleanValue("success", searchAccountResponse.success);
    writer.writeAdditionalData(searchAccountResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchContractByIdRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchContractByIdRequest(writer: SerializationWriter, searchContractByIdRequest: Partial<SearchContractByIdRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchContractByIdRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("contractId", searchContractByIdRequest.contractId);
    writer.writeAdditionalData(searchContractByIdRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchContractByIdResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchContractByIdResponse(writer: SerializationWriter, searchContractByIdResponse: Partial<SearchContractByIdResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchContractByIdResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ContractModel>("contract", searchContractByIdResponse.contract, serializeContractModel);
    writer.writeNumberValue("errorCode", searchContractByIdResponse.errorCode);
    writer.writeStringValue("errorMessage", searchContractByIdResponse.errorMessage);
    writer.writeBooleanValue("success", searchContractByIdResponse.success);
    writer.writeAdditionalData(searchContractByIdResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchContractRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchContractRequest(writer: SerializationWriter, searchContractRequest: Partial<SearchContractRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchContractRequest || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("live", searchContractRequest.live);
    writer.writeStringValue("searchText", searchContractRequest.searchText);
    writer.writeAdditionalData(searchContractRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchContractResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchContractResponse(writer: SerializationWriter, searchContractResponse: Partial<SearchContractResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchContractResponse || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<ContractModel>("contracts", searchContractResponse.contracts, serializeContractModel);
    writer.writeNumberValue("errorCode", searchContractResponse.errorCode);
    writer.writeStringValue("errorMessage", searchContractResponse.errorMessage);
    writer.writeBooleanValue("success", searchContractResponse.success);
    writer.writeAdditionalData(searchContractResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchHalfTradeResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchHalfTradeResponse(writer: SerializationWriter, searchHalfTradeResponse: Partial<SearchHalfTradeResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchHalfTradeResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", searchHalfTradeResponse.errorCode);
    writer.writeStringValue("errorMessage", searchHalfTradeResponse.errorMessage);
    writer.writeBooleanValue("success", searchHalfTradeResponse.success);
    writer.writeCollectionOfObjectValues<HalfTradeModel>("trades", searchHalfTradeResponse.trades, serializeHalfTradeModel);
    writer.writeAdditionalData(searchHalfTradeResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchOpenOrderRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchOpenOrderRequest(writer: SerializationWriter, searchOpenOrderRequest: Partial<SearchOpenOrderRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchOpenOrderRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", searchOpenOrderRequest.accountId);
    writer.writeAdditionalData(searchOpenOrderRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchOrderRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchOrderRequest(writer: SerializationWriter, searchOrderRequest: Partial<SearchOrderRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchOrderRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", searchOrderRequest.accountId);
    writer.writeDateValue("endTimestamp", searchOrderRequest.endTimestamp);
    writer.writeDateValue("startTimestamp", searchOrderRequest.startTimestamp);
    writer.writeAdditionalData(searchOrderRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchOrderResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchOrderResponse(writer: SerializationWriter, searchOrderResponse: Partial<SearchOrderResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchOrderResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", searchOrderResponse.errorCode);
    writer.writeStringValue("errorMessage", searchOrderResponse.errorMessage);
    writer.writeCollectionOfObjectValues<OrderModel>("orders", searchOrderResponse.orders, serializeOrderModel);
    writer.writeBooleanValue("success", searchOrderResponse.success);
    writer.writeAdditionalData(searchOrderResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchPositionRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchPositionRequest(writer: SerializationWriter, searchPositionRequest: Partial<SearchPositionRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchPositionRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", searchPositionRequest.accountId);
    writer.writeAdditionalData(searchPositionRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchPositionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchPositionResponse(writer: SerializationWriter, searchPositionResponse: Partial<SearchPositionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchPositionResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", searchPositionResponse.errorCode);
    writer.writeStringValue("errorMessage", searchPositionResponse.errorMessage);
    writer.writeCollectionOfObjectValues<PositionModel>("positions", searchPositionResponse.positions, serializePositionModel);
    writer.writeBooleanValue("success", searchPositionResponse.success);
    writer.writeAdditionalData(searchPositionResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchTradeRequest The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchTradeRequest(writer: SerializationWriter, searchTradeRequest: Partial<SearchTradeRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchTradeRequest || isSerializingDerivedType) { return; }
    writer.writeNumberValue("accountId", searchTradeRequest.accountId);
    writer.writeDateValue("endTimestamp", searchTradeRequest.endTimestamp);
    writer.writeDateValue("startTimestamp", searchTradeRequest.startTimestamp);
    writer.writeAdditionalData(searchTradeRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TradingAccountModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTradingAccountModel(writer: SerializationWriter, tradingAccountModel: Partial<TradingAccountModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!tradingAccountModel || isSerializingDerivedType) { return; }
    writer.writeNumberValue("balance", tradingAccountModel.balance);
    writer.writeBooleanValue("canTrade", tradingAccountModel.canTrade);
    writer.writeNumberValue("id", tradingAccountModel.id);
    writer.writeBooleanValue("isVisible", tradingAccountModel.isVisible);
    writer.writeStringValue("name", tradingAccountModel.name);
    writer.writeBooleanValue("simulated", tradingAccountModel.simulated);
    writer.writeAdditionalData(tradingAccountModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ValidateResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeValidateResponse(writer: SerializationWriter, validateResponse: Partial<ValidateResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!validateResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("errorCode", validateResponse.errorCode);
    writer.writeStringValue("errorMessage", validateResponse.errorMessage);
    writer.writeStringValue("newToken", validateResponse.newToken);
    writer.writeBooleanValue("success", validateResponse.success);
    writer.writeAdditionalData(validateResponse.additionalData);
}
export interface TradingAccountModel extends AdditionalDataHolder, Parsable {
    /**
     * The balance property
     */
    balance?: number | null;
    /**
     * The canTrade property
     */
    canTrade?: boolean | null;
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The isVisible property
     */
    isVisible?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The simulated property
     */
    simulated?: boolean | null;
}
export interface ValidateResponse extends AdditionalDataHolder, Parsable {
    /**
     * 0 = Success1 = InvalidSession2 = SessionNotFound3 = ExpiredToken4 = UnknownError
     */
    errorCode?: number | null;
    /**
     * The errorMessage property
     */
    errorMessage?: string | null;
    /**
     * The newToken property
     */
    newToken?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
/* tslint:enable */
/* eslint-enable */
